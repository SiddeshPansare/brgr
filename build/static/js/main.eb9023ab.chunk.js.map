{"version":3,"sources":["components/Assets/Images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder.js","components/Orders/CheckoutSummary/CheckoutSummary.js","axios-orders.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","className","style","height","src","BurgerLogo","alt","NavItem","href","link","active","children","NavItems","Navigation_NavItem_NavItem","Toolbar","components_Logo_Logo","Navigation_NavItems_NavItems","Layout","Navigation_Toolbar_Toolbar","BurgerIngredients","ingredient","this","type","Component","burger","transformedIngrediends","Object","keys","ingredients","map","igkey","toConsumableArray","Array","_","i","Burger_BurgerIngredients_BurgerIngredients","key","reduce","arr","el","concat","console","log","BuildControl","onClick","removed","disabled","added","controls","label","BuildControls","textAlign","price","toFixed","ctrl","BuildControls_BuildControl_BuildControl","addIngredient","removeIngredient","disabledInfo","purchasable","ordered","Backdrop","show","CloseModal","Modal","UI_Backdrop_Backdrop","transform","opacity","Button","btnType","join","clicked","OrderSummary","ingredientSummary","textTransform","UI_Button_Button","purchaseCancel","purchaseContinue","Spinner","IGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","basePrice","purchasing","loading","AddIngredientHandler","updatedCount","_this","updatedIngredients","objectSpread","priceAddition","newPrice","setState","PurchaseHandler","RemoveIngredientHandler","oldCount","priceDeduction","PurchasingHandler","PurchaseContinueHandler","querryParams","push","encodeURIComponent","querryString","history","pathname","search","sum","orderSummary","Burger_OrderSummary_OrderSummary","UI_Spinner_Spinner","UI_Modal_Modal","Burger_Burger","Burger_BuildControls_BuildControls","CheckoutSummary","width","margin","CancelOrder","ContinueOrder","instance","axios","create","baseURL","Input","inputElement","elementType","assign","elementConfig","value","ContactData","orderForm","name","placeholder","email","street1","zipcode","country","deliveryMode","options","displayValue","OrderHandler","event","preventDefault","order","post","then","response","catch","error","formElementsArray","id","config","formElement","UI_Input_Input","Checkout","componentDidMount","querry","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","OrderCancelledHandler","goBack","OrderContinuedHandler","replace","_this2","Orders_CheckoutSummary_CheckoutSummary","Route","path","match","url","render","Checkout_ContactData_ContactData","App","components_Layout_Layout","exact","component","Boolean","window","hostname","app","BrowserRouter","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb9023ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\r\nimport BurgerLogo from '../Assets/Images/burger-logo.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={BurgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n)\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './NavItem.css'\r\n\r\nconst NavItem = (props) => (\r\n    <li className=\"NavItem\">\r\n        <a \r\n            href={props.link}\r\n            className={props.active ? \"active\" : null}>{props.children}</a>\r\n    </li>\r\n)\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport './NavItems.css'\r\nimport NavItem from '../NavItem/NavItem';\r\n\r\nconst NavItems = (props) => (\r\n    <ul className = \"NavItems\" >\r\n        <NavItem link=\"/\" active >Burger Builder</NavItem>\r\n        <NavItem link=\"/\">Checkout</NavItem>\r\n    </ul>\r\n)\r\n\r\nexport default NavItems;","import React from \"react\";\r\nimport \"./Toolbar.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\n\r\nconst Toolbar = () => (\r\n    <header className=\"Toolbar\">\r\n        <div>MENU</div>\r\n        <Logo height = \"80%\" />\r\n        <nav>\r\n            <NavItems />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport './Layout.css';\r\n\r\nconst Layout = (props) => {\r\n    return(\r\n        <div>\r\n            <Toolbar />\r\n            <main className=\"Content\">\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredients.css'\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom') : \r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n\r\n            case ('bread-top') : \r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n                \r\n            case ('meat') : \r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n\r\n            case ('cheese') : \r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n\r\n            case ('salad') : \r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n\r\n            case ('bacon') : \r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n\r\n            default : \r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n\r\n    const transformedIngrediends = Object.keys(props.ingredients)\r\n            .map(igkey => {\r\n                return [...Array(props.ingredients[igkey])].map((_, i) => {\r\n                    return <BurgerIngredients key={igkey + i} type={igkey} />\r\n                })\r\n            }).reduce((arr, el) => {\r\n                return arr.concat(el);\r\n            }, [] )\r\n            console.log(transformedIngrediends);\r\n\r\n    return(\r\n        <div className=\"Burger\">\r\n            <BurgerIngredients type=\"bread-top\" />\r\n            {transformedIngrediends}\r\n            <BurgerIngredients type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">{props.type}</div>\r\n            <button \r\n                className=\"Less\"  \r\n                onClick={props.removed} \r\n                disabled = {props.disabled}>Less</button>\r\n            <button \r\n                className=\"More\" \r\n                onClick={props.added}>More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControl;\r\n","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: \"Salad\", type: \"salad\"},\r\n    { label: \"Bacon\", type: \"bacon\"},\r\n    { label: \"Cheese\", type: \"cheese\"},\r\n    { label: \"Meat\", type: \"meat\"}\r\n]\r\n\r\nconst BuildControls = (props) => {\r\n    return(     \r\n        <div className=\"BuildControls\">       \r\n        <p style={{textAlign: \"center\"}}>Burger Price: <strong> {props.price.toFixed(2)} </strong> </p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl \r\n                    key = {ctrl.label}\r\n                    type = {ctrl.label}\r\n                    added = {() => props.addIngredient(ctrl.type)} \r\n                    removed = {() => props.removeIngredient(ctrl.type)}\r\n                    disabled = {props.disabledInfo[ctrl.type]} />\r\n                )\r\n            )}\r\n        <button\r\n            disabled = {!props.purchasable} \r\n            className=\"OrderButton\"\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BuildControls","import React from 'react';\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.CloseModal}></div> : null\r\n)\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './Modal.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div>\r\n            <Backdrop show={props.show} CloseModal={props.CloseModal}/>\r\n            <div \r\n                className=\"Modal\"\r\n                style = {{\r\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)', \r\n                    opacity: props.show ? '1' : '0'\r\n                }}>\r\n                    {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => (\r\n    <button \r\n        className={[Button, props.btnType].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igkey => {\r\n            return (\r\n                <li key='igkey'>\r\n                    <span style={{ textTransform: \"capitalize\" }}>{igkey}</span>: {props.ingredients[igkey]}\r\n                </li>\r\n            )\r\n        })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Proceed to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n)\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Burger from '../components/Burger/Burger';\r\nimport BuildControls from '../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../components/UI/Modal/Modal';\r\nimport OrderSummary from '../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\n\r\nconst IGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.4,\r\n    cheese: 0.7,\r\n    meat: 1.2\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        basePrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    AddIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]; \r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        const priceAddition = IGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.basePrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({ \r\n            ingredients: updatedIngredients,\r\n            basePrice: newPrice\r\n        });\r\n        this.PurchaseHandler(updatedIngredients);\r\n    }\r\n\r\n    RemoveIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]; \r\n        const updatedCount = oldCount - 1;\r\n        if(oldCount <= 0) { \r\n            return;\r\n        }\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        this.setState({ \r\n            ingredients: updatedIngredients,\r\n        });\r\n        \r\n        const priceDeduction = IGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.basePrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({ \r\n            basePrice: newPrice\r\n        });\r\n        this.PurchaseHandler(updatedIngredients);\r\n    }\r\n\r\n    PurchasingHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    PurchaseContinueHandler = () => {\r\n        // alert('Purchased!')\r\n        \r\n        const querryParams = []\r\n        for (const i in this.state.ingredients) {\r\n           querryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        const querryString = querryParams.join('&')\r\n\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + querryString\r\n        })\r\n        \r\n\r\n\r\n    }\r\n\r\n    PurchaseHandler = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igkey => {\r\n                return ingredients[igkey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0)\r\n        this.setState({purchasable: sum > 0})\r\n    }\r\n\r\n    CloseModal = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        const disabledInfo = { \r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = <OrderSummary \r\n            price={this.state.basePrice}\r\n            ingredients = {this.state.ingredients}\r\n            purchaseCancel = {this.CloseModal}\r\n            purchaseContinue = {this.PurchaseContinueHandler} />\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <Modal \r\n                    show={this.state.purchasing} \r\n                    CloseModal={this.CloseModal}>\r\n                        {orderSummary}\r\n                </Modal>\r\n                <Burger ingredients = {this.state.ingredients} />\r\n                <BuildControls \r\n                    addIngredient = {this.AddIngredientHandler}\r\n                    removeIngredient = {this.RemoveIngredientHandler}\r\n                    disabledInfo = {disabledInfo}\r\n                    purchasable = {this.state.purchasable}\r\n                    price = {this.state.basePrice}\r\n                    ordered = {this.PurchasingHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className=\"OrderSummary\">\r\n            <h1>We hope you will enjoy the Burger!!</h1>\r\n            <div style={{width:'100%', margin:'auto'}}>\r\n                <Burger ingredients = {props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.CancelOrder}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.ContinueOrder}\r\n                >CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-builder-eeaea.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst Input = ( props ) => {\r\n    \r\n    let inputElement = null;\r\n    switch ( props.elementType ) {\r\n        case ('input') :\r\n            inputElement = <input \r\n                className=\"InputElement\" \r\n                {...props.elementConfig} \r\n                value={props.value} />\r\n        \r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className=\"InputElement\" \r\n                {...props.elementConfig} \r\n                value={props.value} />\r\n\r\n        // case ('select'):\r\n        //     inputElement = (\r\n        //         <select \r\n        //             className=\"InputElement\"\r\n        //             value={props.value} > \r\n        //                 {props.elementConfig.options.map(option => (\r\n        //                     <option value={option.value}>\r\n        //                         {option.displayValue}\r\n        //                     </option>\r\n        //                 ))}\r\n        //         </select>\r\n        //     )\r\n\r\n        default :\r\n            inputElement = <input \r\n                className=\"InputElement\" \r\n                {...props.elementConfig} \r\n                value={props.value} />\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"Input\" >\r\n            <label className=\"Label\" >{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport './ContactData.css'\r\nimport axios from '../../../axios-orders'\r\nimport Input from '../../../components/UI/Input/Input'\r\n\r\nclass ContactData extends Component {\r\n    \r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Name'\r\n                },\r\n                value: ''\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: ''\r\n            },\r\n            street1: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: ''\r\n            },\r\n            zipcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP'\r\n                },\r\n                value: ''\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: ''\r\n            },\r\n            deliveryMode: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fast', displayValue: 'fast'},\r\n                        {value: 'cheap', displayValue: 'cheap'}\r\n                    ]\r\n                },\r\n                value: ''\r\n        },\r\n        loading: false\r\n        }\r\n    }\r\n\r\n    OrderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.basePrice,\r\n            \r\n        }\r\n        axios.post('./orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading: false})\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false})\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        return(\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your contact data:</h4>\r\n                <form>\r\n                    {\r\n                        formElementsArray.map( formElement => (\r\n                            <Input \r\n                                key={formElementsArray.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                value={formElement.config.value} />\r\n                        ))\r\n                    }\r\n                    <Button btnType=\"Success\" clicked={this.OrderHandler}>ORDER</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React,{ Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Orders/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    \r\n    state={\r\n        ingredients: {\r\n            salad: 1,\r\n            meat: 1,\r\n            cheese: 1,\r\n            bacon: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const querry = new URLSearchParams(this.props.location.search)\r\n        const ingredients = {}\r\n        for(let param of querry.entries()) {\r\n            ingredients[param[0]] = +param[1]\r\n        }\r\n        this.setState({ingredients: ingredients})\r\n    }\r\n    \r\n    OrderCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    OrderContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    CancelOrder={this.OrderCancelledHandler}\r\n                    ContinueOrder={this.OrderContinuedHandler}/>\r\n                <Route \r\n                    path={this.props.match.url + '/contact-data'} \r\n                    render={() => <ContactData ingredients={this.state.ingredients} />} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={Checkout} />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}